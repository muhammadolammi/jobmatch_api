// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: resumes.sql

package database

import (
	"context"
)

const clearResumes = `-- name: ClearResumes :exec
DELETE  FROM resumes
`

func (q *Queries) ClearResumes(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, clearResumes)
	return err
}

const createResume = `-- name: CreateResume :one
INSERT INTO resumes (
file_name, text, session_id)
VALUES ( $1, $2, $3)
RETURNING id, file_name, text, session_id, created_at
`

type CreateResumeParams struct {
	FileName  string
	Text      string
	SessionID string
}

func (q *Queries) CreateResume(ctx context.Context, arg CreateResumeParams) (Resume, error) {
	row := q.db.QueryRowContext(ctx, createResume, arg.FileName, arg.Text, arg.SessionID)
	var i Resume
	err := row.Scan(
		&i.ID,
		&i.FileName,
		&i.Text,
		&i.SessionID,
		&i.CreatedAt,
	)
	return i, err
}

const deleteResumesBySession = `-- name: DeleteResumesBySession :exec
DELETE  FROM resumes WHERE session_id=$1
`

func (q *Queries) DeleteResumesBySession(ctx context.Context, sessionID string) error {
	_, err := q.db.ExecContext(ctx, deleteResumesBySession, sessionID)
	return err
}

const getResumes = `-- name: GetResumes :one
SELECT id, file_name, text, session_id, created_at FROM resumes
`

func (q *Queries) GetResumes(ctx context.Context) (Resume, error) {
	row := q.db.QueryRowContext(ctx, getResumes)
	var i Resume
	err := row.Scan(
		&i.ID,
		&i.FileName,
		&i.Text,
		&i.SessionID,
		&i.CreatedAt,
	)
	return i, err
}
